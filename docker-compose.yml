services:
  auth: 
    build: 
      context: .
      dockerfile: ./apps/auth/Dockerfile
      # target: production
      target: development
    # command: node dist/apps/auth/main
    command: yarn run start:dev auth
    ports: 
      - "3001:3001"
    env_file:
      - ./apps/auth/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - rabbitmq
      - auth-db
  orders: 
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development
      # target: production
    command: yarn run start:dev orders
    # command: node dist/apps/orders/main
    ports: 
      - "3002:3002"
    env_file:
      - ./apps/orders/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - rabbitmq
      - orders-db
  orders-db: 
    image: mysql:8.0
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders_db
      MYSQL_USER: orders_user
      MYSQL_PASSWORD: orders_password
    volumes:
      - orders_db_data:/var/lib/mysql
  auth-db:
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: auth_db
      MYSQL_USER: auth_user
      MYSQL_PASSWORD: auth_password
    volumes:
      - auth_db_data:/var/lib/mysql
  api-gateway:
    build: 
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    ports: 
      - "8081:80"
    volumes:
      - ./apps/api-gateway/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
volumes:
  auth_db_data:
  orders_db_data: